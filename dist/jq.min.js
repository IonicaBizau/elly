(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.jq = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
module.exports = function (selector) {
    return this.dom.querySelector(selector);
};

},{}],2:[function(require,module,exports){
var jQ = require("./jq");

function jq(selector, context) {
    if (typeof selector === "function") {
        return jq.window.ready(selector);
    }
    return new jQ(selector, context);
}

jq.fn = jQ.prototype;
jq.fn.find = require("./find");
jq.fn.on = require("./on");
jq.fn.ready = require("./ready");

var _doc = null;
var _win = null;

// Create a custom document
if (typeof document === "undefined") {
    _doc = {};
    _win = {};
} else {
    _doc = document;
    _win = window;
}

jQ.document = jq.document = new jQ(_doc);
jQ.window = jq.window = new jQ(_win);

module.exports = jq;

},{"./find":1,"./jq":3,"./on":4,"./ready":5}],3:[function(require,module,exports){
"use strict";

class jQ {
    constructor (selector, context) {
        context = context ? new jQ(context) : jQ.document;
        this.dom = typeof selector === "string"
                 ? context.find(selector)
                 : this.dom = selector
                 ;
    }
}

module.exports = jQ;

},{}],4:[function(require,module,exports){
module.exports = function (event, handler) {
    this.dom.addEventListener(event, handler);
    return this;
};

},{}],5:[function(require,module,exports){
module.exports = function (fn) {
    this.on("load", fn);
};

},{}]},{},[2])(2)
});